{"ast":null,"code":"var _jsxFileName = \"/Users/esapuolakka/Projects/react/appointment-planner-starting-v18/src/components/tileList/TileList.js\";\nimport React from \"react\";\nimport Tile from \"../tile/Tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TileList = _ref => {\n  let {\n    tiles\n  } = _ref;\n  if (!tiles || tiles.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No appointments available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(\"Appointments in TileList:\", tiles);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tiles.map((tile, index) => {\n      const {\n        name,\n        ...description\n      } = tile;\n      console.log(description);\n      return /*#__PURE__*/_jsxDEV(Tile, {\n        name: name,\n        ...description\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = TileList;\nexport default TileList;\nvar _c;\n$RefreshReg$(_c, \"TileList\");","map":{"version":3,"names":["React","Tile","jsxDEV","_jsxDEV","TileList","_ref","tiles","length","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","map","tile","index","name","description","_c","$RefreshReg$"],"sources":["/Users/esapuolakka/Projects/react/appointment-planner-starting-v18/src/components/tileList/TileList.js"],"sourcesContent":["import React from \"react\";\r\nimport Tile from \"../tile/Tile\";\r\n\r\nconst TileList = ({ tiles }) => {\r\n  if (!tiles || tiles.length === 0) {\r\n    return <p>No appointments available.</p>;\r\n  }\r\n  console.log(\"Appointments in TileList:\", tiles);\r\n  return (\r\n    <div>\r\n      {tiles.map((tile, index) => {\r\n        const { name, ...description } = tile;\r\n        console.log(description);\r\n        return (\r\n          <Tile key={index} name={name} {...description} />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TileList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGC,IAAA,IAAe;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAD,IAAA;EACzB,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAChC,oBAAOJ,OAAA;MAAAK,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAC1C;EACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAER,KAAK,CAAC;EAC/C,oBACEH,OAAA;IAAAK,QAAA,EACGF,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1B,MAAM;QAAEC,IAAI;QAAE,GAAGC;MAAY,CAAC,GAAGH,IAAI;MACrCH,OAAO,CAACC,GAAG,CAACK,WAAW,CAAC;MACxB,oBACEhB,OAAA,CAACF,IAAI;QAAaiB,IAAI,EAAEA,IAAK;QAAA,GAAKC;MAAW,GAAlCF,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAiC;IAErD,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACQ,EAAA,GAhBIhB,QAAQ;AAkBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}